---
- name: Update all installed packages
  apt:
    update_cache: yes
    upgrade: yes

- name: Create /etc/prometheus directory
  ansible.builtin.file:
    path: /etc/prometheus
    state: directory
    mode: "0755"

- name: Copy the configuration file to /etc/prometheus
  ansible.builtin.copy:
    src: ./files/prometheus/config/prometheus.yml
    dest: /etc/prometheus/prometheus.yml

- name: Ensure /tmp/monitoring directory exists
  ansible.builtin.file:
    path: /tmp/monitoring
    state: directory

- name: Copy the docker-compose.yml to a temporary directory in order to build the container
  ansible.builtin.copy:
    src: ./files/prometheus/docker-compose.yml
    dest: /tmp/monitoring/prometheus-compose.yml

- name: Deploy the Prometheus container with its docker-compose.yml
  community.docker.docker_compose:
    project_src: /tmp/monitoring
    files:
      - prometheus-compose.yml

- name: Create Prometheus service in the system
  ansible.builtin.copy:
    src: ./files/prometheus/services/prometheus.service
    dest: /etc/systemd/system/prometheus.service

- name: Start Prometheus service
  ansible.builtin.systemd:
    state: started
    name: prometheus

- name: Enable Prometheus Service
  ansible.builtin.systemd:
    name: prometheus
    enabled: yes
    masked: no

- name: Copy the docker-compose.yml to a temporary directory in order to build the container
  ansible.builtin.copy:
    src: ./files/exporters/node_exporter/docker-compose.yml
    dest: /tmp/monitoring/node-exporter-compose.yml

- name: Deploy the Node Exporter container with its docker-compose.yml
  community.docker.docker_compose:
    project_src: /tmp/monitoring
    files:
      - node-exporter-compose.yml

- name: Create Node Exporter service in the system
  ansible.builtin.copy:
    src: ./files/exporters/node_exporter/node_exporter.service
    dest: /etc/systemd/system/node_exporter.service

- name: Start Node Exporter service
  ansible.builtin.systemd:
    state: started
    name: node_exporter

- name: Enable Node Exporter Service
  ansible.builtin.systemd:
    name: node_exporter
    enabled: yes
    masked: no

- name: Copy the docker-compose.yml to a temporary directory in order to build the container
  ansible.builtin.copy:
    src: ./files/exporters/cadvisor/docker-compose.yml
    dest: /tmp/monitoring/cadvisor-compose.yml

- name: Deploy the Cadvisor container with its docker-compose.yml
  community.docker.docker_compose:
    project_src: /tmp/monitoring
    files:
      - cadvisor-compose.yml

- name: Create Cadvisor service in the system
  ansible.builtin.copy:
    src: ./files/exporters/cadvisor/cadvisor.service
    dest: /etc/systemd/system/cadvisor.service

- name: Start Cadvisor service
  ansible.builtin.systemd:
    state: started
    name: cadvisor

- name: Enable Cadvisor Service
  ansible.builtin.systemd:
    name: cadvisor
    enabled: yes
    masked: no

- name: Open Firewall on Prometheus port (!this must be changed though. Only for testing purposes)
  command: sudo ufw allow 9090/tcp

- name: Reload Firewall service
  command: sudo ufw reload

- name: Copy the docker-compose.yml to a temporary directory in order to build the container
  ansible.builtin.copy:
    src: ./files/grafana/docker-compose.yml
    dest: /tmp/monitoring/grafana-compose.yml

- name: Deploy the Grafana container with its docker-compose.yml
  community.docker.docker_compose:
    project_src: /tmp/monitoring
    files:
      - grafana-compose.yml

- name: Create Grafana service in the system
  ansible.builtin.copy:
    src: ./files/grafana/services/grafana.service
    dest: /etc/systemd/system/grafana.service

- name: Start Grafana service
  ansible.builtin.systemd:
    state: started
    name: grafana

- name: Enable Grafana Service
  ansible.builtin.systemd:
    name: grafana
    enabled: yes
    masked: no

- name: Open Firewall on Grafana port
  command: sudo ufw allow 3000/tcp

- name: Reload Firewall service
  command: sudo ufw reload
